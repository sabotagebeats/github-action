name: 'ape-github-action'
author: 'ApeWorX Ltd.'
description: 'Run an ape command'

inputs:
  python-version: 
    description: 'Override version of python used to run ape- default 3.8'
    required: False
    default: '3.8'
  ape-version-pin:
    description: 'Override version of eth-ape'
    required: False
  ape-plugins-list:
    description: 'Space seperated list of plugins to install with relevant pinning applied'
    required: False
    default: '.'


runs:
  using: 'composite'

  steps:
  
  - uses: actions/cache@v2
    with:
      path: |
        /home/runner/.solcx
        /home/runner/.vvm/vyper-*
      key: ${{ runner.os }}-compiler-cache

  - uses: actions/cache@v2
    with:
      path: |
        ${{ github.workspace }}/.build
      key: ${{ runner.os }}-build-cache

  - uses: actions/setup-python@v2
    with:
      python-version: ${{ inputs.python-version }}
  
  - name: Set pip cache directory path
    id: pip-cache-dir-path
    run: |
      echo "::set-output name=dir::$(pip cache dir)"
    shell: bash

  - name: Restore pip cache
    uses: actions/cache@v2
    id: pip-cache
    with:
      path: |
        ${{ steps.pip-cache-dir-path.outputs.dir }}
      key: ${{ inputs.python-version }}-pip-${{ inputs.ape-version-pin }}

  - run: pip install eth-ape${{ inputs.ape-version-pin }}
    shell: bash

  - run: ape plugins install ${{ inputs.ape-plugins-list }}
    shell: bash

  - name: Find if requirements.txt if exists
    id: find-requirements-txt
    run: |
      echo "::set-output name=file::$(cat requirements.txt)"
    shell: bash

  - name: Install requirements.txt
    run: pip install -r requirements.txt
    if: contains(steps.find-requirements-txt.outputs.file,'No such file or directory')
